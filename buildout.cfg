[buildout]
index = http://d.pypi.python.org/simple
eggs-directory = eggs
download-cache = downloads
extends = 
    versions.cfg
versions = versions
extensions =
    buildout.dumppickedversions

eggs =
    ZopeSkel
 
develop = . 
 
parts =
#directories:
    directories
#install graphdb rexster
    rexster_download 
    rexster_bin 
#install adhocracy
    adhocracy 
#debug tools
    omelette 
    test
    

[directories]
recipe = z3c.recipe.mkdir
paths = var
        var/data
        rexster

[rexster_download]
recipe = hexagonit.recipe.download
url = https://github.com/downloads/tinkerpop/rexster/rexster-0.8.zip
destination = ${buildout:directory}/rexster
ignore-existing = true
strip-top-level-dir = true

[rexster_bin]
recipe = plone.recipe.command
command = 
    echo "cd ${buildout:directory}/rexster/rexster-server-0.8/ && ${buildout:directory}/rexster/rexster-server-0.8/rexster.sh --start -c ${buildout:directory}/etc/rexster.xml -wr ${buildout:directory}/rexster/rexster-server-0.8/target/rexster-server-0.8-standalone/bin/public" >  ${buildout:directory}/bin/rexster
    chmod a+x ${buildout:directory}/bin/rexster
    echo "cd ${buildout:directory}/rexster/rexster-server-0.8/ && ${buildout:directory}/rexster/rexster-server-0.8/rexster-console.sh" > ${buildout:directory}/bin/rexster-console
    chmod a+x ${buildout:directory}/bin/rexster-console
    chmod a+x ${buildout:directory}/rexster/rexster-server-0.8/rexster.sh                                                                                                  
    chmod a+x ${buildout:directory}/rexster/rexster-server-0.8/target/rexster-server-0.8-standalone/bin/rexster.sh
    chmod a+x ${buildout:directory}/rexster/rexster-server-0.8/target/rexster-server-0.8-standalone/bin/rexster-console.sh
    chmod a+x ${buildout:directory}/rexster/rexster-server-0.8/rexster-console.sh

[adhocracy]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    adhocracy.core
    ipdb
interpreter = adhocracypy
 
[omelette]
recipe = collective.recipe.omelette
eggs = ${adhocracy:eggs}

[test]
recipe = pbp.recipe.noserunner
eggs = pbp.recipe.noserunner 
       ipdbplugin
       ${adhocracy:eggs}
working-directory = ${buildout:directory}/src
environment = test-env

[test-env]
NOSE_MATCH=^test
NOSE_NOCAPTURE=1
NOSE_COVER_PACKAGE=adhocracy.core
NOSE_COVER_INCLUSIVE=0
NOSE_WITH_COVERAGE=1
NOSE_COVER_ERASE=1
NOSE_WITH_DOCTEST=1
NOSE_DOCTEST_TESTS=1
NOSE_DOCTEST_EXTENSION=txt
 
