[buildout]
#extensions = mr.developer
index = http://d.pypi.python.org/simple
allow-hosts = *.python.org
prefer-final = false
show-picked-versions= true
extends =
    versions.cfg
versions = versions
parts =
     dirs
     source_env
     adhocracy
     omelette
     sphinx_documentation
     sphinx_build_adhocracy
     pytest
     flake
     pylint
     nodejs
#     supervisor
auto-checkout = *
develop =
#     src/sdidemo
     src/adhocracy
     src/substanced

[dirs]
recipe = z3c.recipe.mkdir
paths = var/blobs
        var/uploads_tmp
        var/mail
        var/mail/cur
        var/mail/new
        var/mail/tmp

[source_env]
recipe = collective.recipe.template
input = inline:
   #!/bin/bash
   PATH=${buildout:bin-directory}:$PATH
output =${buildout:directory}/source_env

[adhocracy]
recipe = zc.recipe.egg
dependent-scripts = true
eggs = adhocracy
       substanced
       repoze.profile
       requests
       ipdb
       pyramid_chameleon

[omelette]
recipe = collective.recipe.omelette
eggs = ${adhocracy:eggs}

[sphinx_build_adhocracy]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    cd ${buildout:directory}/docs/
    make html text
output = ${buildout:bin-directory}/sphinx_build_adhocracy
mode = 755

[sphinx_documentation]
recipe = zc.recipe.egg
dependent-scripts = true
eggs = Sphinx
       repoze.sphinx.autointerface
       sphinxcontrib-napoleon
       adhocracy 


[pytest]
# run: bin/py.test -s src/adhocracy/adhocracy
recipe = zc.recipe.egg
dependent-scripts = false
eggs =
  ipdb
  interlude
  pytest
  pytest-cov
  pytest-flakes
  pytest-quickcheck
  adhocracy
  requests
  webtest
initialization =
  sys.argv[1:1] = [
                  '--capture=no',
                  '--strict',
                  '--tb=native',
                  '--cov=adhocracy',
                  '--cov-report=html',
                  '--cov-report=term',
                  '--flakes',
                  ]

[flake]
recipe = zc.recipe.egg
eggs =
    flake8
    flake8_docstrings
    pep8-naming

[pylint]
recipe = zc.recipe.egg
eggs =
    pylint
    ${adhocracy:eggs}
initialization =
    from pylint import run_pylint
    sys.argv[1:1] = [
      '--output-format=colorized',
      '--zope=y'
      ]
entry-points = 
    pylint_adhoc=pylint:run_pylint
# pylint is broken, we have set a custom entry point
scripts =
    pylint=pylint_original
    pylint_adhoc=pylint

[nodejs]
recipe = gp.recipe.node
version = 0.10.21
npms = typescript
# a list of extra directory to add to NODE_PATH
#node-path =
scripts = tsc node

[supervisor]
#not python 3 compatible
recipe = zc.recipe.egg
dependent-scripts = true
eggs = supervisor


