@mixin icon-button($base-font-size: $font-size-small) {
    @include inline-block;
    background: $color-background-base-introvert;
    color: $color-text-introvert;
    line-height: 24px / $base-font-size * 1em;
    min-width: 24px / $base-font-size * 1em;
    padding: 0 (8px / $base-font-size * 1em);

    &:hover, &:focus {
        color: $color-text-highlight-normal;
    }
}

button,
.button,
input[type="reset"],
input[type="submit"],
input[type="button"] {
    font-size: $font-size-small;
    height: 24px / $font-size-small * 1em;
    line-height: 24px / $font-size-small * 1em;
    text-transform: none;

    &:first-letter {
        text-transform: capitalize;
    }

    &, &.m-call-to-action {
        color: $color-text-normal;
        min-width: 1px;
        padding: 0 (30px / $font-size-normal * 1em);

        &:focus:not(:disabled):not(.ng-disabled),
        &:hover:not(:disabled):not(.ng-disabled) {
            background: transparent;
            color: $color-text-normal;
            text-decoration: underline;
        }

        &:active:not(:disabled):not(.ng-disabled) {
            color: $color-shadow;
        }

        &.m-call-to-action {
            @include border-radius(1em);
            color: $color-text-inverted;
            font-size: $font-size-normal;
            font-weight: $font-weight-extrovert;

            &:hover:not(:disabled):not(.ng-disabled),
            &:focus:not(:disabled):not(.ng-disabled) {
                background: $color-brand-two-introvert;
                color: $color-text-inverted;
                text-decoration: none;
            }

            &:active:not(:disabled):not(.ng-disabled) {
                background: $color-brand-two-extrovert;
                color: $color-text-inverted;
            }
        }

        &.m-call-to-action-secondary {
            color: $color-text-introvert;

            &:hover:not(:disabled):not(.ng-disabled),
            &:focus:not(:disabled):not(.ng-disabled) {
                background: transparent;
                color: $color-text-normal;
                text-decoration: underline;
            }
        }

        &.arrow-button {
            background: $color-text-inverted;
            color: $color-text-highlight-normal;
            min-width: 100px;
            outline: 1px solid $color-text-highlight-normal;
            font-weight: $font-weight-extrovert;
            text-align: center;

            &:after {
                content: ">";
            }

            &:focus:not(:disabled):not(.ng-disabled),
            &:hover:not(:disabled):not(.ng-disabled) {
                background: $color-text-highlight-normal;
                color: $color-text-inverted;
                text-decoration: none;
            }
        }
    }
}

/*doc
---
title: Call to action button index of moving column or embed
name: button.m-call-to-action.inside
parent: button
---

For Mein Berlin CTA buttons inside of the moving columns or embed context appear square

```html_example
<div class="l-center m-embed">
<a class="button m-call-to-action">Link</a>
<button type="button" class="m-call-to-action">Button</button>
<input type="submit" class="m-call-to-action" value="Disabled" disabled="disabled" />
</div>
```

*/

.moving-column-body, .l-center.m-embed {
    button,
    .button,
    input[type="reset"],
    input[type="submit"],
    input[type="button"] {
        &, &.m-call-to-action {
            @include border-radius(0);
        }
    }
}
