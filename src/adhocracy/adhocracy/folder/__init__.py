"""Folder content type for resources."""
from adhocracy.interfaces import IResourcePropertySheet
from adhocracy.sheets.name import IName
from adhocracy.resources import IVersionableFubel
from substanced.interfaces import IAutoNamingFolder
from substanced.folder import Folder
from zope.component import queryMultiAdapter
from zope.interface import implementer

import datetime


@implementer(IAutoNamingFolder)
class ResourcesAutolNamingFolder(Folder):

    """ An auto-naming folder which autonames a IResource subobject.

    For IVersionableFubel subobjects it sequentially increments the last name:
    ``VERSION_0000001``, then ``VERSION_0000002``, and so on.

    For subobjects with IName interface the name property is used.

    Custom names are allowed and coexists with the autogenerated names.

    This class implements the
    :class:`substanced.interfaces.IAutoNamingFolder` interface and inherits
    from :class:`substanced.folder.Folder`.

    """

    _autoname_length = 7
    _autoname_last = -1
    _autoname_prefix = 'VERSION_'

    def next_name(self, subobject):
        """Generate name to add subobject.

        Args:
            subobject (object): Object with interface to add.

        Returns:
            name (string):  Valid object name for this folder.

        The generation depends on the interface provided by the subobject:

        adhocracy.resources.IVersionableFubel:

            - increment the last autogenerated name
            - zero-filling the left hand side of the result with 7 zeros.
            - add prefix "VERSION_" to the left hand side.

        adhocracy.sheets.name.IName:

            - use the `name` attribute

        other interfaces:

            - use timestamp to generate name

        If the generated Name does not exists add timestamp to the right side.

        """
        name = ''
        sheet_name = queryMultiAdapter((subobject, IName),
                                       IResourcePropertySheet)
        if sheet_name:
            name = sheet_name.get()['name']
        if IVersionableFubel.providedBy(subobject):
            prefix = 'VERSION_'
            name = prefix + self._zfill(self._autoname_last + 1)
        if name in self.data:
            timestamp = datetime.datetime.now().isoformat()
            name += '_' + timestamp
        if not name:
            name = datetime.datetime.now().isoformat()
        return name

    def add_next(self, subobject, send_events=True, duplicating=None,
                 moving=None, registry=None):
        """Add a subobject and name it automatically.

        Use the name returned by this folder's ``next_name`` method.

        """
        name = self.next_name(subobject)
        return self.add(name, subobject, send_events=send_events,
                        duplicating=duplicating, moving=moving,
                        registry=registry)

    def _zfill(self, name):
        return str(int(name)).zfill(self._autoname_length)
