"""Folder content type for resources."""
import datetime

from substanced.folder import Folder
from zope.interface import implementer

from adhocracy.base import Base
from adhocracy.interfaces import IPool


@implementer(IPool)
class ResourcesAutolNamingFolder(Base, Folder):

    """An Auto-Naming Folder.

    Custom names are allowed and coexists with the autogenerated names.

    The next_name method sequentially increments the last name:
    ``0000001``, then ``0000002``, and so on.

    """

    _autoname_length = 7
    _autoname_last = -1

    def next_name(self, subobject, prefix=''):
        """Generate name to add subobject.

        Args:
            subobject (object): Object with interface to add.

        Keyword Args:
            prefix (String): Prefix the generated name.

        Returns:
            name (string):  Valid object name for this folder.

        This method does:

            - increment the last autogenerated name
            - zero-filling the left hand side of the result with 7 zeros.
            - add prefix to the left hand side if any

        If the generated Name does not exists add timestamp to the right side.

        """
        intifiable = self._autoname_last + 1
        name = prefix + self._zfill(intifiable)
        self._autoname_last = intifiable
        if name in self.data:
            timestamp = datetime.datetime.now().isoformat()
            name += '_' + timestamp
        return name

    def add_next(self, subobject, prefix=''):
        """Add a subobject and name it automatically.

        Use the name returned by this folder's ``next_name`` method.

        """
        name = self.next_name(subobject, prefix=prefix)
        return self.add(name, subobject, send_events=False)

    def _zfill(self, name):
        return str(int(name)).zfill(self._autoname_length)
